SimultEq-solve.py 考察

--以下より実行結果1 ("|"より左の数字は行数であり、実際の実行結果には含まれていない)--

  ｜$ python SimultEq-solve.py 
 1｜
 2｜--Jacobi--
 3｜x = 1.00000000007
 4｜y = 1.99999999988
 5｜z = 2.99999999997
 6｜u = 3.99999999984
 7｜time = 0.000622987747192
 8｜n = 30
 9｜
10｜--Gauss Siedel--
11｜x = 1.00000000001
12｜y = 1.99999999999
13｜z = 2.99999999999
14｜u = 3.99999999999
15｜time = 0.000308990478516
16｜n = 19
17｜
18｜--SOR--
19｜x = 1.0
20｜y = 2.0
21｜z = 3.0
22｜u = 4.0
23｜time = 0.000694990158081
24｜n = 16
25｜
26｜--LU--
27｜x = 1.0
28｜y = 2.0
29｜z = 3.0
30｜u = 4.0
31｜time = 0.000102043151855

--以上で実行結果1終了--
--以下より実行結果2--

  ｜$ python SimultEq-solve.py 
 1｜
 2｜--Jacobi--
 3｜x = 1.0
 4｜y = 2.0
 5｜z = 3.0
 6｜u = 4.0
 7｜time = 0.000845193862915
 8｜n = 44
 9｜
10｜--Gauss Siedel--
11｜x = 1.0
12｜y = 2.0
13｜z = 3.0
14｜u = 4.0
15｜time = 0.000446081161499
16｜n = 27
17｜
18｜--SOR--
19｜x = 1.0
20｜y = 2.0
21｜z = 3.0
22｜u = 4.0
23｜time = 0.000792026519775
24｜n = 22
25｜
26｜--LU--
27｜x = 1.0
28｜y = 2.0
29｜z = 3.0
30｜u = 4.0
31｜time = 0.000092983245849

--以上で実行結果2終了--


本問題は、ヤコビ法、ガウス・ザイデル法、SOR法、LU法を用いて計算を行った。
ヤコビ法は、係数行列を対角行列とその残余に分解して計算する方式であり、ガウス・ザイデル法は、さらにその残余を
対角とその下を0とした上三角行列、対角とその上を0とした下三角行列とに分けて漸化式を計算する反復法である。
また、SOR法は加速パラメータを導入してガウス・ザイデル法での収束を加速する方式である。
加速パラメータは最適な値を定めなければ逆に収束が遅くなったりする場合があり、問題ごとに設定する必要があるためSOR法の欠点とも言える。
しかし、ヤコビ法の反復行列のスペクトル半径が既知である場合は、最適な値を求めることができ、本問題はそれに従い加速パラメータを設定した。
LU法は係数行列をLU分解し、前進代入と後退代入を用いて計算する方式である。


実行結果1は許容誤差 1e-10、実行結果2は許容誤差 1e-15 に設定した際の結果である。
実行結果1、2より、ガウス・ザイデル法はヤコビ法に比べ計算時間及び反復回数がおよそ1/2になっており、ガウス・ザイデル法の方が収束性が良いと言える。
また、SOR法はガウス・ザイデル法に比べて計算速度は遅くなってしまっているが、反復回数及び精度がよくなっており(実行結果1)、加速パラメータによって
適切に収束が加速されていると言える。計算速度が遅くなってしまっている原因としては、加速パラメータを求める際の行列計算や、加速パラメータが増えた事による
計算回数の増加などが考えられる。
LU法は実行結果1、2よりどの方法よりも計算速度が速く精度も良いことがわかる。これは、逆行列を求める必要がなく計算オーダーが小さくなっている為と考えられる。
ただし、全ての主座小行列の行列式が0でないことが必要十分条件であり、そうでない場合はLU法を用いることはできない。

従ってN元連立線形方程式を解く際、ヤコビ法、ガウス・ザイデル法、SOR法、LU法の中であれば、
LU分解が可能な場合はLU法、そうでない場合は、SOR法を用いるのが良いと考えられる。
SOR法の場合は適切な加速パラメータを設定する手間があるので、ガウス・ザイデル法を用いる(SOR法における加速パラメータを1とする)のも良いと考える。




GaussianElimination.py

--以下より実行結果 ("|"より左の数字は行数であり、実際の実行結果には含まれていない)--

  ｜$ python GaussianElimination.py 
 1｜
 2｜--original--
 3｜x = -0.736417910448
 4｜y = 0.0146268656716
 5｜z = -0.349701492537
 6｜u = 1.83731343284
 7｜w = 0.721940298507
 8｜time = 0.000416994094849
 9｜
10｜--scipy--
11｜x = -0.736417910448
12｜y = 0.0146268656716
13｜z = -0.349701492537
14｜u = 1.83731343284
15｜w = 0.721940298507
16｜time = 0.000182867050171

--以上で実行結果終了--

ガウスの消去法は、掃き出し法とも呼ばれ、行基本変形を用いて係数行列の下三角成分を0にし連立方程式を解くアルゴリズムであり、直接法である。
また、行列のランク計算や逆行列の計算にも用いられる。
ピボットが小さいと丸め誤差や0除算が発生してしまうので、大きい値を選択するピボット選択付きになるように実装した。
また、計算結果の確認のためscipyを用いて確認を行った。

実行結果より、両者の計算結果が一致しているので、ガウスの消去法によるN元連立1次方程式を解くプログラムはできたと言える。
ただし、実行時間はライブラリを用いた際の方が2倍以上速い。これは、scipyは反復法を用いているためであると考えられ、特殊解も求めることができる。


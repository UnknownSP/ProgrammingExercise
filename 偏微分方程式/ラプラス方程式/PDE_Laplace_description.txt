PDE_Laplace.py 考察

--以下より実行結果 ("|"より左の数字は行数であり、実際の実行結果には含まれていない)--

  ｜$ python PDE_Laplace.py 
 1｜
 2｜--Jacobi--
 3｜time = 29.345760107040405
 4｜n = 8272
 5｜
 6｜--Gauss Siedel--
 7｜time = 15.084813833236694
 8｜n = 4327
 9｜
10｜--SOR--
11｜time = 0.4338390827178955
12｜n = 100

--以上で実行結果終了--

出力グラフをPNGとして添付してある。
(*_ans.png は各方法の結果、Error-Iter.pngは誤差と反復回数の関係のグラフ)

ヤコビ法、ガウス・ザイデル法、SOR法を用いてラプラス方程式の解を求めた。
本問題の場合、範囲は(0<x<1, 0<y<1)、境界条件はdirichlet条件であり、φ(x,0)=φ(0,y)=0, φ(x,1)=x,φ(1,y)=y である。

各方法では、x,yを離散化してグリッド化した平面においての解を求める。
ヤコビ法では、計算対象の点の周囲の4点の過去の値の平均値をとり値を求め、この操作を繰り返し空間方向に滑らかにする。
ガウス・ザイデル法は、右方向、上方向にx,yが増加すると考えると、ある点の値を計算する場合、左と下の点は計算済みであるはずなので、
これを用いて収束を速くしたものである。
SOR法は、ガウス・ザイデル法において加速パラメータOmegaを導入し、収束を速めたものである。Omega=1であるときはガウス・ザイデル法そのものになる。
本課題では、参考文献をもとに、加速パラメータの計算式を求めた。今回の条件(x_H=y_H=0.02)では、Omegaは約1.88である。

各方法での結果のグラフ(*_ans.png)より、条件を満たすような解がもとまったと考えられ、それぞれの結果において誤差はほとんどなかった。
従って、誤差と反復回数の関係のグラフ(Error-Iter.png)を求めた。
誤差と反復回数の関係グラフより、SOR法>ガウス・ザイデル法>ヤコビ法の順で反復回数が少ない時の誤差が大きいが、
反復回数が増えるにつれ同順番で収束が速くなり、SOR法が一番収束が速く反復回数が少ないことが読み取れる。
また実行結果より、SOR法>ガウス・ザイデル法>ヤコビ法の順で計算時間が短いことがわかり、SOR法が一番優れていることがわかった。
これは、ガウス・ザイデル法はヤコビ法の改善版、SOR法は加速パラメータを用いたガウス・ザイデル法の改善版であるためだと考えられる。

参考文献
[1] Pythonによる科学・技術計算
    URL <https://qiita.com/sci_Haru/items/b98791f232b93690a6c3>



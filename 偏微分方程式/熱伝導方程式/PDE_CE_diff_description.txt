PDE_CE_diff.py 考察

--以下より実行結果 ("|"より左の数字は行数であり、実際の実行結果には含まれていない)--

 ｜$ python PDE_CE_diff.py 
1｜
2｜--Forward diff--
3｜time = 1.0711379051208496
4｜
5｜--Backward diff--
6｜time = 514.3391947746277
7｜
8｜--Crank-Nicolson--
9｜time = 361.05741786956787

--以上で実行結果終了--

出力グラフをGIFとして添付してある。
(PDE_CE_diff.gif は各方法の結果、CE_diff.png はCrank-Nicolson法と他2法との誤差)

偏微分で表される1次元熱伝導方程式は、様々な条件における熱の伝わりかたの結果を求めることができる。
本問題の場合、範囲は[0,4]であり、初期条件はu(x,0)=1、境界条件はdirichlet条件であり、
すなわち両端は0である。

参考文献をもとに、熱伝導方程式の偏微分方程式を前進差分、後退差分、Crank-Nicolson法を用いて逐次計算して解き、結果をGIFとして保存するプログラムを作成した。
Crank-Nicolson法は、空間・時間微分共に中心差分を用いて計算している。そのため、
前進差分においては空間に対して中心差分、時間に対して前進差分を用い、
前進差分においては空間に対して中心差分、時間に対して後退差分を用いた。

結果のグラフ(PDE_CE_diff.gif)より、Crank-Nicolson法と比べると、t=0に近い時に陽解法では値が外(左右)に大きく膨れていることが読み取れる。
差がわかりづらいので時間に対しての誤差に対するグラフ(CE_diff.png)を見ると、
t=0に近い時に陽解法では正方向に、陰解法では負の方向に誤差が発生していることがわかる。
これは、参考文献にある式より、
陽解法ではt+1の値を求めるときに右辺が全て正であるが、Crank-Nicolson法では負の値が存在しているので正の値の誤差が発生していると考えらる。
陰解法とCrank-Nicolson法の場合は考慮するuの値(u[x,t+1]やu[x,t-1])によって負の値の誤差が発生していると考える。

また、陽解法・陰解法は1次の精度であるのに対し、Crank-Nicolson法は2次の精度であるので、
Crank-Nicolson法を用いた法が精度良く解が求まると言える。

実行結果より、陰解法とCrank-Nicolson法の場合において計算時間が長くなってしまっているが、これは実装によって短縮することができる。
今回は以前作成したガウス・ザイデル法のプログラムを用いたため一度2次元配列に戻さなければならなかったが、dia_matrixによってより効率化できると考える。
(時間がなかったため今回は2次元配列に戻して計算する方法としました。)

参考文献
[1] クランク=ニコルソン法のプログラミング
    URL <https://cattech-lab.com/science-tools/simulation-lecture-3-8/>



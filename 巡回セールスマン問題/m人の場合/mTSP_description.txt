knapsack.py 実行結果

--以下より実行結果 ("|"より左の数字は行数であり、実際の実行結果には含まれていない)--
--また、vcopt.tspGA使用時のStatusも省略してある--

  ｜$ python mTSP.py 
 1｜
 2｜-------1 TSP-------
 3｜
 4｜--2 Opt solve (1 TSP)--
 5｜Min Length : 200.4501619606024
 6｜time : 2.472203016281128
 7｜Route : [ 0 23 32 26 36 35 11 28  9  1 13 24 21 18  8 34  5 22  3  7 29 17 16  6
 8｜ 19 31 12 15 10 20 25 33 27 30  2  4 14  0]
 9｜
10｜--GA solve (1 TSP)--
11｜Min Length : 200.4501619606024
12｜time : 1328.9457515804521
13｜Route : [ 0 23 32 26 36 35 11 28  9  1 13 24 21 18  8 34  5 22  3  7 29 17 16  6
14｜ 19 31 12 15 10 20 25 33 27 30  2  4 14  0]
15｜
16｜-------2 TSP-------
17｜
18｜--2 Opt solve (2 TSP)--
19｜Max Length : 112.65783890405478
20｜time : 16.559172868728638
21｜
22｜Route 1 : [ 0 35 22  5 34  8 18 21 24 13  1 11 28  9 14  4  2 30  0]
23｜Route 1 Length : 112.65783890405478
24｜
25｜Route 2 : [ 0 27 33 25 20 10 15 12 31 19  6 16 17 29  7  3 36 26 32 23  0]
26｜Route 2 Length : 110.48497842076709
27｜
28｜--GA solve (2 TSP)--
29｜Max Length : 112.65783890405478
30｜time : 1513.1583434907832
31｜
32｜Route 1 : [ 0 35 22  5 34  8 18 21 24 13  1 11 28  9 14  4  2 30  0]
33｜Route 1 Length : 112.65783890405478
34｜
35｜Route 2 : [ 0 32 27 33 25 20 10 15 12 31 19  6 16 17 29  7  3 36 26 23  0]
36｜Route 2 Length : 108.58107083042466
37｜
38｜-------3 TSP-------
39｜
40｜--2 Opt solve (3 TSP)--
41｜Max Length : 97.60826715463615
42｜time : 51.01424193382263
43｜
44｜Route 1 : [ 0 27 12 31 19  6 16 17 29 36  0]
45｜Route 1 Length : 97.25210626031021
46｜
47｜Route 2 : [ 0 28 11  8 18 21 24 13  1  9 14  4  2 30  0]
48｜Route 2 Length : 97.60826715463615
49｜
50｜Route 3 : [ 0 33 25 20 10 15  7  3 22 34  5 35 26 32 23  0]
51｜Route 3 Length : 94.9457213139273
52｜
53｜--GA solve (3 TSP)--
54｜Max Length : 97.39537979952722
55｜time : 1556.6800482273102
56｜
57｜Route 1 : [ 0  3 29 17 16  6 19 31 12  7  0]
58｜Route 1 Length : 97.39537979952722
59｜
60｜Route 2 : [ 0 32  9 11 28 13  1 24 21 18  8  5 34 22 35 36 26 23 14  0]
61｜Route 2 Length : 96.13265846720438
62｜
63｜Route 3 : [ 0  4  2 30 27 33 20 15 10 25  0]
64｜Route 3 Length : 96.971987363346
65｜
66｜-------4 TSP-------
67｜
68｜--2 Opt solve (4 TSP)--
69｜Max Length : 91.09409795096059
70｜time : 66.5229811668396
71｜
72｜Route 1 : [ 0 26 36  3 29 17 16  6 12 15 10 33 27  0]
73｜Route 1 Length : 91.09409795096059
74｜
75｜Route 2 : [ 0 32 23 28  1 21 18  8  5 34 22 35 11 13 24  9  0]
76｜Route 2 Length : 90.16947219371718
77｜
78｜Route 3 : [ 0  2  4 14 20 25 30  0]
79｜Route 3 Length : 87.83544004080466
80｜
81｜Route 4 : [ 0  7 19 31  0]
82｜Route 4 Length : 90.86963366235695
83｜
84｜
85｜--GA solve (4 TSP)--
86｜Max Length : 91.30642368316504
87｜time : 1759.066547870636
88｜
89｜Route 1 : [ 0 31 19  7  0]
90｜Route 1 Length : 90.86963366235695
91｜
92｜Route 2 : [ 0 32 28  1 11 22 34  8 18 21 24 13  5 26  0]
93｜Route 2 Length : 87.70540770261
94｜
95｜Route 3 : [ 0 23  9 35  3 36 27  4  2 30 14  0]
96｜Route 3 Length : 87.77241651860388
97｜
98｜Route 4 : [ 0 33 25 20 10 15 12  6 16 17 29  0]
99｜Route 4 Length : 91.30642368316504

--以上で実行結果終了--


説明:

1行目から5行目では、各種ライブラリをインポートしている。
7行目から13行目では、今回解くnodeを定義している。
15行目から21行目では、1人での巡回セールスマン問題を解く際の評価関数を定義している。
｜与えられたノードid配列(0を含まない)の最初と最後に0を付加することでidが0のノードを始点とした閉路を作成し
｜その閉路の経路長を返すことで、1人での巡回セールスマン問題となるように評価関数を定義している。
23行目から34行目では、2人での巡回セールスマン問題を解く際の評価関数を定義している。
｜与えられたノードid配列(0を含む)にある0を境に右と左で経路を分け、それぞれの配列の最後に0を付加することで2つの閉路を作成し
｜その閉路のうち長い方の距離を返すことで、2人で経路をわけた際の巡回セールスマン問題となるように評価関数を定義している。
36行目から49行目では、3人での巡回セールスマン問題を解く際の評価関数を定義している。
｜与えられたノードid配列(0を2つ含む)にある0を境に経路を3つに分け、それぞれの配列の最後に0を付加することで3つの閉路を作成し
｜その閉路の中で最も長い距離を返すことで、3人で経路をわけた際の巡回セールスマン問題となるように評価関数を定義している。
51行目から67行目では、4人での巡回セールスマン問題を解く際の評価関数を定義している。
｜与えられたノードid配列(0を3つ含む)にある0を境に経路を4つに分け、それぞれの配列の最後に0を付加することで4つの閉路を作成し
｜その閉路の中で最も長い距離を返すことで、4人で経路をわけた際の巡回セールスマン問題となるように評価関数を定義している。
70行目から74行目では、求まった経路を巡回したときの距離を返す関数を定義している。
77行目から81行目では、nodeをxとyに分解して配列に代入している。

85行目から100行目では、2-opt法(局所探索法)によって1人での巡回セールスマン問題をvcoptを用いて20回計算し、
計算に要した時間と一番良い結果の最短距離、経路を表示している。
102行目から110行目では、遺伝的アルゴリズム(GA)によって1人での巡回セールスマン問題をvcoptを用いて計算し、かかった時間と最短距離、経路を表示している。

114行目から135行目では、2-opt法(局所探索法)によって2人での巡回セールスマン問題をvcoptを用いて100回計算し、
計算に要した時間と一番良い結果の長い方の距離、1人目の経路と距離、2人目の経路と距離を表示している。
137行目から151行目では、遺伝的アルゴリズム(GA)によって2人での巡回セールスマン問題をvcoptを用いて計算し、
かかった時間と長い方の距離、1人目の経路と距離、2人目の経路と距離を表示している。

155行目から180行目では、2-opt法(局所探索法)によって3人での巡回セールスマン問題をvcoptを用いて100回計算し、
計算に要した時間と一番良い結果の最も長い経路の距離、1人目の経路と距離、2人目の経路と距離、3人目の経路と距離を表示している。
182行目から201行目では、遺伝的アルゴリズム(GA)によって3人での巡回セールスマン問題をvcoptを用いて計算し、
かかった時間と最も長い経路の距離、1人目の経路と距離、2人目の経路と距離、3人目の経路と距離を表示している。

205行目から234行目では、2-opt法(局所探索法)によって4人での巡回セールスマン問題をvcoptを用いて100回計算し、
計算に要した時間と一番良い結果の最も長い経路の距離、1人目の経路と距離、2人目の経路と距離、3人目の経路と距離、4人目の経路と距離を表示している。
236行目から259行目では、遺伝的アルゴリズム(GA)によって4人での巡回セールスマン問題をvcoptを用いて計算し、
かかった時間と最も長い経路の距離、1人目の経路と距離、2人目の経路と距離、3人目の経路と距離、4人目の経路と距離を表示している。


前回の課題では、2-opt法を用いた場合の計算は一度しか行わなかったが、今回は複数回繰り返し最も良い結果を計算している。
実行結果より、1人での巡回セールスマン問題の場合、2-opt法を用いた場合は200.45(実行結果5行目)、GAを用いた場合は200.45(実行結果11行目)となった。
前回は2-opt法の計算結果はもっと悪い結果であったが、複数回計算することでより良い結果が得られた。また、実行時間も2秒程度とGAを用いた場合より
明らかに短くなっている。
実行結果より、2人での巡回セールスマン問題の場合、2-opt法を用いた場合は112.65(実行結果19行目)、GAを用いた場合は112.65(実行結果29行目)となった。
どちらの方法でも、1人目と2人目の巡回する経路長の差が大きくないので、良い計算結果が得られていると考えられる。
2つの方法を比べると、GAを用いた方が、経路の短い方のセールスマンの移動距離が短くなっていることがわかり、GAの方が良い結果を得られていると考えられる。
実行結果より、3人での巡回セールスマン問題の場合、2-opt法を用いた場合は97.60(実行結果41行目)、GAを用いた場合は97.39(実行結果54行目)となった。
2人での場合までは2つの方法で距離は同じであったが、今回はGAを用いた方が最も長い経路が短く、良い結果が得られている。
実行結果より、4人での巡回セールスマン問題の場合、2-opt法を用いた場合は91.09(実行結果69行目)、GAを用いた場合は91.30(実行結果86行目)となった。
3人での場合までは2-opt法の結果の方がよくなることはなかったが、今回は2-opt法を用いた方が最も長い経路が短く、良い結果が得られている。

何人での場合も、2-opt法を用いた場合はGAを用いた場合より計算時間は明らかに短く、1回1回の計算時間が短いため何度も試行できる。
3人での場合はGAより2-opt法の結果が悪いが、これは今回100回計算した際の一番良い結果としているからであると考えられる。
より計算回数を増やすことでGAに近い、もしくはより良い結果が得られると考える。
4人での場合は2-opt法の方が良い結果が得られており、必ずしもGAを用いた場合の方が良い結果が得られるわけではないとわかった。
GAを用いた方法では巡回する点が37程度で20分もの時間がかかってしまっており、2-opt方を用いた場合はセールスマンを増やすと試行回数を多くしなければならず、
巡回点を増やしたりセールスマンを増やす場合は現実的な時間で計算できないと考えられる。
巡回点が多くない場合は2-opt法を複数回試行し最良の結果を解とすることで、少ない計算時間で最適解に近い結果を得られると考えられる。

複数人での巡回セールスマン問題において、セールスマンをいくら増やしても距離が縮まらなくなると考えられる。
必ずスタート地点に戻ってこなければならないので、スタート点から最も遠い点を結ぶ経路の往復距離がこの問題の最短距離になると考える。
本問題においては、スタート点から最も遠いid=31の点との往復距離である88.58が最短になると考えられ、4人の場合の結果である91.09は良い結果であると考える。

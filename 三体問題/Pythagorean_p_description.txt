Pythagorean_p.py 考察

--以下より実行結果 ("|"より左の数字は行数であり、実際の実行結果には含まれていない)--

 ｜$ python Pythagorean_p.py 
1｜
2｜--Runge Kutta (2)--
3｜time = 7.66673e+02
4｜
5｜--Runge Kutta (4)--
6｜time = 1.63151e+01
7｜
8｜--Runge Kutta (8)--
9｜time = 4.71328e+00

--以上で実行結果終了--

Graphのフォルダの中に、出力グラフを保存してある。

三体問題とは、互いに重力相互作用する三質点系の運動がどのようになるかを求める問題である。その中でもピタゴラス三体問題は、
質量比3:4:5の質点が辺の長さの比が3:4:5である直角三角形(ピタゴラスの定理において整数で表される単純な直角三角形)の頂点に置かれた際の問題である。
本課題では、以前から用いているscipyライブラリのsolve_ivpを用い、三体問題を微分方程式で表し数値解析を行った。
以下に示した参考文献[1][2][3]をもとに微分方程式をたてた。

出力結果のグラフより、どの方法においても参考文献[1]で示されているグラフとほとんど変わらないため、正しい軌跡が得られていると考える。
ただし、solve_ivpにおけるatol(絶対誤差)とrtol(相対誤差)が大きいと、解が予想と異なったものになった。これは、質点同士が極端に近いた場合に、
誤差が大きいとその後の動きが変わってしまうためであると予想する。従って、ピタゴラス三体問題は誤差の設定が大事であると考える。


参考文献
[1] ピタゴラス3体問題で遊ぶ 
    URL <https://qiita.com/i153/items/34674e267dd90298a245>
[2] 補外法による天体運動のシミュレーション
    URL <https://mcm-www.jwu.ac.jp/~mathphys/hp/sotuken_sub/shoji/sotuken2001.pdf>
[3] Python+Scipyでルンゲクッタ8次のDOP853(Dormand Prince)を使う
    URL <https://sci.tea-nifty.com/blog/2020/06/post-cb7d7d.html>


